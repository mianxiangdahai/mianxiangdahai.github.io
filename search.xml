<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>漩涡鸣人</title>
    <url>/2019/08/01/%E5%8A%A8%E6%BC%AB/%E7%81%AB%E5%BD%B1%E5%BF%8D%E8%80%85/%E6%BC%A9%E6%B6%A1%E9%B8%A3%E4%BA%BA/</url>
    <content><![CDATA[<h1 id="漩涡鸣人"><a href="#漩涡鸣人" class="headerlink" title="漩涡鸣人"></a>漩涡鸣人</h1><p><img src="/2019/08/01/%E5%8A%A8%E6%BC%AB/%E7%81%AB%E5%BD%B1%E5%BF%8D%E8%80%85/%E6%BC%A9%E6%B6%A1%E9%B8%A3%E4%BA%BA/%E6%BC%A9%E6%B6%A1%E9%B8%A3%E4%BA%BA-1.jpg"></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>他是日本漫画《火影忍者》及其衍生作品中的男主角。火之国木叶隐村的忍者，四代目火影波风水门和漩涡玖辛奈之子，六道仙人次子阿修罗转世。刚出生时父母为保护村子而牺牲，并将尾兽“九尾”封印在鸣人体内。成为孤儿的鸣人从小被村民歧视，但在唯一认同他的老师海野伊鲁卡以及三代目火影猿飞日斩的鼓励下有了要成为火影的梦想，让所有人都认同他的存在。成为忍者后，和旗木卡卡西、宇智波佐助以及春野樱组成第七班进行各种任务。<br>为实现梦想，和守护伙伴们的羁绊，鸣人不断修炼变强，作为木叶“三忍”之一自来也的弟子，在追求梦想的过程中不断突破自我，贯彻了自身的忍道，获得人们的认可。最后与忍者联军以及宇智波佐助还有九尾一同终结了战争，为忍者世界带来和平，并实现自己成为火影（七代目火影）和忍界英雄的梦想。</p>
<h3 id="最初的感动"><a href="#最初的感动" class="headerlink" title="最初的感动"></a>最初的感动</h3><p>鸣人得到忍者学校老师伊鲁卡的认可，逐渐成长。伊鲁卡的父母双双死在九尾对木叶的袭击中，虽然伊鲁卡开始很难接受鸣人，但随着相处时间变长，他发现鸣人内心的孤独，并慢慢接受鸣人，也了解他为什么希望能得到大家的认同，因为伊鲁卡小时候也曾经对大家有同样的期望。伊鲁卡可说是村里第一个能接受鸣人的人，在他身上留下不可泯灭的印象。伊鲁卡对鸣人来说就像父亲似的亲人，因为鸣人通过他来逾越存在自己心中多年的悲伤之情。</p>
<p><img src="/2019/08/01/%E5%8A%A8%E6%BC%AB/%E7%81%AB%E5%BD%B1%E5%BF%8D%E8%80%85/%E6%BC%A9%E6%B6%A1%E9%B8%A3%E4%BA%BA/%E6%BC%A9%E6%B6%A1%E9%B8%A3%E4%BA%BA-2.jpg"></p>
<h3 id="仙人模式"><a href="#仙人模式" class="headerlink" title="仙人模式"></a>仙人模式</h3><p>上图为鸣人仙人模式状态，日本漫画《火影忍者》及其衍生作品中的一种忍术，是以自然能量制造出“仙术查克拉”，可以使自身的忍术、体术、幻术的威力得到极大的提升。</p>
<h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><p>虽然鸣人的成功与他的身世,血统有很大关系,但是如果他不努力,也是不可能成功的,也是不会被所有人都支持,都认可的,所以,我们不能只看到鸣人拼爹的那一方面,更要重视他的努力.记得在电影&lt;&lt;**博人传**&gt;&gt;中,当大简木 •  桃氏袭击村子的时候,鸣人挺身而出,那时候,佐助,一转身,对博人说:”<strong>听好了,他浑身都是弱点,简直一无是处,但他靠着自己的力量一步步克服,最终成为了火影,你要了解的,并非是现在的鸣人,难道不是一直以来的鸣人吗?</strong>“ </p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一直靠着自己的努力不断前进,不断克服困难,我们每个人都是漩涡 • 鸣人,每个人,都能成为家人,眼中,亲朋好友眼中,那个,一直凭着自己努力不断向前,最终获得成功的漩涡 • 鸣人.!</p>
]]></content>
      <categories>
        <category>动漫</category>
        <category>火影忍者</category>
      </categories>
      <tags>
        <tag>火影忍者</tag>
      </tags>
  </entry>
  <entry>
    <title>六剑奴</title>
    <url>/2019/07/28/%E5%8A%A8%E6%BC%AB/%E7%A7%A6%E6%97%B6%E6%98%8E%E6%9C%88/%E5%85%AD%E5%89%91%E5%A5%B4/</url>
    <content><![CDATA[<h1 id="六剑奴"><a href="#六剑奴" class="headerlink" title="六剑奴"></a>六剑奴</h1><p>“六剑奴”，中国3D武侠动画《秦时明月》系列中的原创角色，包括真刚、断水、乱神、魍魉、转魄、灭魂六人 </p>
<p><img src="/2019/07/28/%E5%8A%A8%E6%BC%AB/%E7%A7%A6%E6%97%B6%E6%98%8E%E6%9C%88/%E5%85%AD%E5%89%91%E5%A5%B4/liujiannu.jpg"></p>
<pre><code>    真刚、断水、乱神、魍魉、转魄、灭魂
</code></pre>
<p> 秦朝赵高麾下“罗网刺客团”中的最得力的杀手小队，位列天字一级 。为寻求更强大的力量，放弃自由之身和本名，投身“罗网”，被赵高授以绝世名剑(主要是“越王八剑”),并从此以剑为名。</p>
<p> 赵高有这样一个习惯，每收一名杀手就送他一把上古利刃，而使剑的人也自此脱胎换骨，过去的他将不复存在，从他拿到剑的那一刻起，他将只有一个名字，那就是那把利剑的名字，他的生命也仅剩下一个目的，那就是去杀人，为了主人去杀人……忘却了过往、忘却了名字，成为纯粹的剑的奴隶，这就是六剑奴名字的由来！</p>
<p><img src="/2019/07/28/%E5%8A%A8%E6%BC%AB/%E7%A7%A6%E6%97%B6%E6%98%8E%E6%9C%88/%E5%85%AD%E5%89%91%E5%A5%B4/jian.jpg"></p>
<p>秦朝赵高的六个神秘杀手。六位一体，但是又各自为政；个性张扬，但是又绝对服从。</p>
<p>他们每一个都拥有着致命的杀人专长，每一人都曾经是名动一时的剑客，又是六把传世名剑的主人。他们也各自拥有着属于自己不为人知的过往。没有人知道他们是何时、如何成为了赵高的杀手；更没有人知道他们的实力究竟有多深、有多可怕，因为亲眼见识过他或她们杀人绝技的人都已经去了另一个世界！</p>
]]></content>
      <categories>
        <category>动漫</category>
        <category>秦时明月</category>
      </categories>
      <tags>
        <tag>秦时明月</tag>
      </tags>
  </entry>
  <entry>
    <title>ES7中的Async/Await</title>
    <url>/2019/09/07/%E5%89%8D%E7%AB%AF/ECMAScript%206,7,8,9,10/ES7%E4%B8%AD%E7%9A%84Async-Await/index/</url>
    <content><![CDATA[<h3 id="Async-和-Await"><a href="#Async-和-Await" class="headerlink" title="Async 和 Await"></a>Async 和 Await</h3><p>它们两个可以理解为两个特殊的函数标记.</p>
<h4 id="Async"><a href="#Async" class="headerlink" title="Async"></a>Async</h4><p>异步,ES7当中新规定的语法规则,为了更加简化以往实现异步编程的复杂,冗余的代码,而出现的异步语法标记.它的出现,表示被它修饰的函数为异步函数,在执行的过程中,可以先执行这个函数之后的代码.</p>
<h4 id="Await"><a href="#Await" class="headerlink" title="Await"></a>Await</h4><p>与 <code>Async</code> 搭配出现使用,表示 Async wait (异步等待),常用于 Async 定义的函数中,在执行的过程中,需要把Await标记的所有函数语句执行完成后,再继续执行Async中的其他语句,Async中的语句也执行完成以后,才执行Async 外边的其他语句</p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul>
<li>同步的代码风格</li>
<li>被所有主流浏览器<code>原生</code>支持</li>
</ul>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul>
<li>具有一定的误导性</li>
</ul>
<p>被 Async 标记的函数中的 await 标记函数,会自上而下依次等待上一个await返回结果之后再执行下一个await , 因此,如果习惯了同步编程风格,把一堆不受彼此结果影响的await函数堆叠写在一起,会造成不必要的时间损耗</p>
<ul>
<li>一个异常会导致整个函数停止执行</li>
</ul>
<p><code>async</code>里如果有多个<code>await</code>函数的时候，如果其中任一一个抛出异常或者报错了，都会导致函数停止执行，直接<code>reject</code>;</p>
<h4 id="搭配"><a href="#搭配" class="headerlink" title="搭配"></a>搭配</h4><p>为了避免一个异常会导致整个函数停止执行,Async 和 Await有时需要与try,catch联合使用</p>
<h5 id="例子代码"><a href="#例子代码" class="headerlink" title="例子代码"></a>例子代码</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nodoing;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">throwError</span>(<span class="params"></span>) &#123;  </span><br><span class="line">    <span class="keyword">try</span>&#123;  </span><br><span class="line">       <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>);    </span><br><span class="line">       nodoing = <span class="keyword">await</span> <span class="string">&#x27;没有执行&#x27;</span>; </span><br><span class="line">    &#125;<span class="keyword">catch</span>(error)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;has Error stop&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">throwError</span>().<span class="title function_">then</span>(<span class="function"><span class="params">success</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>, nodoing))</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;失败&#x27;</span>,nodoing))</span><br><span class="line"><span class="comment">// has Error stop</span></span><br><span class="line"><span class="comment">// 成功 undefined</span></span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>ES7</code> 的 <code>async/await</code> 特性对 <code>JS</code> 异步编程是个巨大的改进.它让代码可读性更好.更方便调试,但是想要正确的使用他们,你必须彻底了解 <code>promise</code>,因为它只是个语法糖，它依赖的技术仍然是 <code>promise</code>.</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>ECMAScript 6,7,8,9,10</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3--圆角</title>
    <url>/2020/03/07/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E5%9C%86%E8%A7%92/index/</url>
    <content><![CDATA[<h1 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h1><p>利用css3的<code>border-radius</code>属性实现元素的外边框圆角</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>border-radius: 实现圆角的半径</p>
<h3 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h3><p>把当前正方形div变成圆形,直接设置值为50%,默认圆角半径为变成的一半,相当于四个半圆组成的一个圆.</p>
<h4 id="代码及结果"><a href="#代码及结果" class="headerlink" title="代码及结果"></a>代码及结果</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/07/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E5%9C%86%E8%A7%92/index/img-1.png"></p>
<h3 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h3><p>给div添加普通的圆角效果, 设置一个比较小的值, 值越大, 圆角效果越明显</p>
<h4 id="代码及结果-1"><a href="#代码及结果-1" class="headerlink" title="代码及结果"></a>代码及结果</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/07/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E5%9C%86%E8%A7%92/index/img-2.png"></p>
<h3 id="第三种情况"><a href="#第三种情况" class="headerlink" title="第三种情况"></a>第三种情况</h3><p>分别设置水平半径和竖直半径, 形成一些特殊的图形</p>
<p>方向依次是左上角开始,顺时针(左上,右上,右下,左下)</p>
<p><code>border-radius: 100px / 20px 20px 150px 150px;</code></p>
<p>&#x2F; 前面的100px为四个角的水平半径</p>
<p>&#x2F; 后面的十个值为顺时针顺序,四个角的竖直半径</p>
<h4 id="代码及结果-2"><a href="#代码及结果-2" class="headerlink" title="代码及结果"></a>代码及结果</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">100px</span> / <span class="number">20px</span> <span class="number">20px</span> <span class="number">150px</span> <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/07/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E5%9C%86%E8%A7%92/index/img-3.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>BFC原理的理解</title>
    <url>/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/</url>
    <content><![CDATA[<h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><p>BFC 即 Block Formatting Contexts (块级格式化上下文)，它属于定位方案里面的普通流。</p>
<p><strong>具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。</strong></p>
<p>通俗一点来讲，可以把 BFC 理解为一个封闭的大箱子，箱子内部的元素无论如何翻江倒海，都不会影响到外部。</p>
<h2 id="触发-BFC"><a href="#触发-BFC" class="headerlink" title="触发 BFC"></a>触发 BFC</h2><p>只要元素满足下面任一条件即可触发 BFC 特性：</p>
<ul>
<li>body 根元素</li>
<li>浮动元素：float 除 none 以外的值</li>
<li>绝对定位元素：position (absolute、fixed)</li>
<li>display 为 inline-block、table-cells、flex</li>
<li>overflow 除了 visible 以外的值 (hidden、auto、scroll)</li>
</ul>
<h2 id="BFC-特性及应用"><a href="#BFC-特性及应用" class="headerlink" title="BFC 特性及应用"></a>BFC 特性及应用</h2><p><strong>1. 解决两个嵌套div盒子,里面那个盒子的外边距,直接与外边盒子重叠在一起(内外两个盒子重合在一起分不开)</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, initial-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.out</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.in</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#666</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;out&quot;&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span> class=&quot;in&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/c-1.jpg"><br>为了解决这个问题,我们给外面的div盒子,加上 overflow:auto; 让它产生 BFC:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.out</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/c-2.jpg"><br><strong>2. 解决两个平级div盒子相互之间,外边距的重叠</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>: lightgreen;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-1.png"></p>
<p>从效果上看，因为两个 div 元素都处于同一个 BFC 容器下 (这里指 body 元素) 所以第一个 div 的下边距和第二个 div 的上边距发生了重叠，所以两个盒子之间距离只有 100px，而不是 200px。</p>
<p>首先这不是 CSS 的 bug，我们可以理解为一种规范，<strong>如果想要避免外边距的重叠，可以将其放在不同的 BFC 容器中。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>: lightgreen;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这时候，两个盒子边距就变成了 200px </p>
<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-2.png"></p>
<p><strong>3. BFC 可以包含浮动的元素（清除浮动）</strong></p>
<p>我们都知道，浮动的元素会脱离普通文档流，来看下面一个例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #000;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background: #4ce5d5;float: left;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-3.png"></p>
<p>由于容器内元素浮动，脱离了文档流，所以容器只剩下 2px 的边距高度。如果使触发容器的 BFC，那么容器将会包裹着浮动元素。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #000;overflow: hidden&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background: #4ce5d5;float: left;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如图：</p>
<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-4.png"></p>
<p><strong>3. BFC 可以阻止元素被浮动元素覆盖</strong></p>
<p>先来看一个文字环绕效果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 100px;width: 100px;float: left;background: lightblue&quot;</span>&gt;</span>我是一个左浮动的元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; height: 200px;background: #eee&quot;</span>&gt;</span>我是一个没有设置浮动, </span><br><span class="line">也没有触发 BFC 元素, width: 200px; height:200px; background: #eee;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-5.png"></p>
<p>这时候其实第二个元素有部分被浮动元素所覆盖，(但是文本信息不会被浮动元素所覆盖) 如果想避免元素被覆盖，可触第二个元素的 BFC 特性，在第二个元素中加入 <strong>overflow: hidden</strong>，就会变成：</p>
<p><img src="/2019/08/09/%E5%89%8D%E7%AB%AF/CSS/BFC%E5%8E%9F%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/index/content-6.png"></p>
<p>这个方法可以用来实现两列自适应布局，效果不错，这时候左边的宽度固定，右边的内容自适应宽度(去掉上面右边内容的宽度)。</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3--渐变</title>
    <url>/2020/01/30/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E6%B8%90%E5%8F%98/index/</url>
    <content><![CDATA[<h1 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h1><p>在多个颜色之间显示平稳的过渡</p>
<h2 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h2><p>沿着一条轴线改变颜色,在这条线上的指定点之间平稳显示颜色的过渡</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>background:  linear-gradient(方向, 颜色  这个颜色所在的位置, 颜色  这个颜色所在的位置);</p>
<h4 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h4><p>输入在此处的角度,指的是在圆盘中,顺时针方向与起始线的夹角</p>
<p>从圆心出发,通过上面的角度,形成的箭头,箭头所指的方向就是渐变的开始与停止,即渐变的方向. </p>
<p>具体如下图:</p>
<p><img src="/2020/01/30/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E6%B8%90%E5%8F%98/index/deg-1.png"></p>
<h4 id="颜色和位置"><a href="#颜色和位置" class="headerlink" title="颜色和位置"></a>颜色和位置</h4><p>颜色: 可以是英文单词,也可以是十六进制颜色码(#CC00FF).</p>
<p>位置: 百分数–表示在前面的方向上从起始到终止所占的比重	</p>
<p><strong>可以同时指定多个颜色和位置,在指定位置上必定显示对应颜色,在各个位置之间形成两个点的颜色之间的渐变过渡</strong></p>
<p><strong>如果这个点之前或之后没有其他的颜色点,则该点颜色自动延申到开始或者结束</strong></p>
<p><strong>如果两个点重合(使用了相同的位置),则前面的点决定与开始之间的颜色,后面的点决定与结束之间的颜色</strong></p>
<h3 id="例子和结果"><a href="#例子和结果" class="headerlink" title="例子和结果"></a>例子和结果</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(<span class="number">90deg</span>,red <span class="number">20%</span>,green <span class="number">70%</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/01/30/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E6%B8%90%E5%8F%98/index/example-1.png"></p>
<h3 id="两个点重合例子和结果"><a href="#两个点重合例子和结果" class="headerlink" title="两个点重合例子和结果"></a>两个点重合例子和结果</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(<span class="number">90deg</span>,red <span class="number">20%</span>,green <span class="number">20%</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/01/30/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E6%B8%90%E5%8F%98/index/example-2.png"></p>
<h2 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p>background:radial-gradient(形状, 颜色  位置,颜色 位置);</p>
<p>形状: circle 圆形,ellipse 椭圆</p>
<p>不设置形状,默认为椭圆</p>
<p><strong>径向渐变从圆心开始向外扩展,位置如果用百分数,则表示从圆心开始到远端所占的比例,作为颜色点,点与点之间渐变.其他大致与线性渐变类似</strong></p>
<h3 id="例子和结果-1"><a href="#例子和结果-1" class="headerlink" title="例子和结果"></a>例子和结果</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>:<span class="built_in">radial-gradient</span>(red <span class="number">20%</span>,green <span class="number">60%</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2020/01/30/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E6%B8%90%E5%8F%98/index/example-3.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3--盒阴影</title>
    <url>/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/</url>
    <content><![CDATA[<h1 id="盒阴影"><a href="#盒阴影" class="headerlink" title="盒阴影"></a>盒阴影</h1><p>在元素框架上添加阴影效果</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>box-shadow: X偏移, Y偏移, 阴影模糊半径, 阴影扩散半径, 阴影颜色, 阴影内外(可选)</p>
<h3 id="例子和结果"><a href="#例子和结果" class="headerlink" title="例子和结果"></a>例子和结果</h3><ul>
<li>只设置 X偏移, Y偏移. 是实心阴影</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">0px</span> green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/index-1.png"></p>
<ul>
<li>设置 X偏移, Y偏移., 阴影模糊半径. 产生了一定模糊效果, <strong>向外模糊10像素</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">10px</span> <span class="number">0px</span> green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/index-2.png"></p>
<ul>
<li>设置 X偏移, Y偏移., 阴影扩散半径. <strong>向外实心扩散10像素</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="number">10px</span> green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/index-3.png"></p>
<ul>
<li>设置 X偏移, Y偏移., 阴影模糊半径. 阴影扩散半径, <strong>在实心扩散25像素后,再向外模糊10像素</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">10px</span> <span class="number">10px</span> green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/index-4.png"></p>
<ul>
<li>设置 X偏移, Y偏移., 阴影模糊半径. 阴影扩散半径, 加上<code>inset</code>后 ,阴影在盒子内部, 背景之上,内容之下</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#abcdef</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">10px</span> <span class="number">10px</span> green inset;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/17/%E5%89%8D%E7%AB%AF/CSS/CSS3-%E7%9B%92%E9%98%B4%E5%BD%B1/index/index-5.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>border与outline的区别</title>
    <url>/2022/05/07/%E5%89%8D%E7%AB%AF/CSS/border%E4%B8%8Eoutline%E7%9A%84%E5%8C%BA%E5%88%AB/index/</url>
    <content><![CDATA[<h3 id="border与outline的区别"><a href="#border与outline的区别" class="headerlink" title="border与outline的区别"></a>border与outline的区别</h3><ol>
<li>outline不占空间,不会影响元素的尺寸和位置—border占空间,影响元素的尺寸和位置</li>
<li>outline属性针对链接,表单控件等元素设计,而border则可以作用于几乎所有有形的html元素</li>
</ol>
<p><code>所以outline的效果将随图片的focus事件而出现,元素的blur事件而消失,这两种效果都是浏览器的默认行为,无需JavaScript配合CSS实现</code></p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><ul>
<li>以下是设置border的div的效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">230px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">3px</span> solid red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/05/07/%E5%89%8D%E7%AB%AF/CSS/border%E4%B8%8Eoutline%E7%9A%84%E5%8C%BA%E5%88%AB/index/content-1.png"></p>
<ul>
<li>以下是设置outline的div的效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">230px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: <span class="number">3px</span> solid red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/05/07/%E5%89%8D%E7%AB%AF/CSS/border%E4%B8%8Eoutline%E7%9A%84%E5%8C%BA%E5%88%AB/index/content-2.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>flexbox布局中flex项文本溢出设置显示省略号失效问题</title>
    <url>/2019/08/06/%E5%89%8D%E7%AB%AF/CSS/flexbox%E5%B8%83%E5%B1%80%E4%B8%ADflex%E9%A1%B9%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/index/</url>
    <content><![CDATA[<h2 id="flexbox布局中flex项文本溢出设置显示省略号失效问题"><a href="#flexbox布局中flex项文本溢出设置显示省略号失效问题" class="headerlink" title="flexbox布局中flex项文本溢出设置显示省略号失效问题"></a>flexbox布局中flex项文本溢出设置显示省略号失效问题</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>flexbox 布局时 flex 项子元素中的文本溢出后想显示省略号(…)，结果设置 <code>text-overflow:ellipsis</code> 后没效果.</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col1&quot;</span>&gt;</span>图标<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item-con&quot;</span>&gt;</span></span><br><span class="line">      这是溢出要显示省略号的文本这是溢出要显示省略号的文本这是溢出要显示省略号的文本这是溢出要显示省略号的文本这是溢出要显示省略号的文本</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.flex</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col1</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col2</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col2</span> <span class="selector-class">.item-con</span> &#123;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>没有省略号</p>
<p><img src="/2019/08/06/%E5%89%8D%E7%AB%AF/CSS/flexbox%E5%B8%83%E5%B1%80%E4%B8%ADflex%E9%A1%B9%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/index/content-1.jpg"></p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在需要<strong>显示省略号的flex项中(也就是设置flex:1的那一项中</strong>),添加 <strong>min-width:0;</strong></p>
<h4 id="修改后的CSS代码"><a href="#修改后的CSS代码" class="headerlink" title="修改后的CSS代码"></a>修改后的CSS代码</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.flex</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col1</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col2</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">min-width</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex</span> <span class="selector-class">.col2</span> <span class="selector-class">.item-con</span> &#123;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p><img src="/2019/08/06/%E5%89%8D%E7%AB%AF/CSS/flexbox%E5%B8%83%E5%B1%80%E4%B8%ADflex%E9%A1%B9%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/index/content-2.jpg"></p>
<h3 id="具体原因"><a href="#具体原因" class="headerlink" title="具体原因"></a>具体原因</h3><p>涉及到CSS底层的<strong>shrink-to-fit</strong>算法等一系列复杂冗长的分析,有兴趣的同学可以看一下这里的<br><a href="https://www.html.cn/archives/10319">分析</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>弹性伸缩布局</title>
    <url>/2019/08/27/%E5%89%8D%E7%AB%AF/CSS/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E5%B8%83%E5%B1%80/index/</url>
    <content><![CDATA[<h3 id="对于弹性伸缩布局的理解与使用"><a href="#对于弹性伸缩布局的理解与使用" class="headerlink" title="对于弹性伸缩布局的理解与使用"></a>对于弹性伸缩布局的理解与使用</h3><h4 id="给外面父级元素设置的属性"><a href="#给外面父级元素设置的属性" class="headerlink" title="给外面父级元素设置的属性"></a>给外面父级元素设置的属性</h4><p>首先弹性伸缩布局需要指定一个元素为容器,给这个元素的CSS属性设置为</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>:flex;</span><br></pre></td></tr></table></figure>

<p>这个属性可以理解为,在这个元素之内的这一块区域,已经不同于其他区域了,这一块区域,是弹性伸缩布局的区域,并非传统的文档流区域,</p>
<p>可以指定在这个区域内的元素为横向排列,还是纵向排列,分别是:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>:row;</span><br><span class="line">// 横向</span><br><span class="line"><span class="attribute">flex</span><span class="selector-pseudo">:dir</span>ection:column;</span><br><span class="line">// 纵向</span><br></pre></td></tr></table></figure>

<p>指定内部元素水平和竖直居中,这里需要 具体讨论,因为下面的justify-content和align-items两个CSS属性,分别规定着主轴方向和所有交叉轴上元素的对齐方式.具体分为以下两种情况:</p>
<ul>
<li>当元素排列为横向时, 主轴是横向, 此时这两个属性, 对应的作用如下:</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>:center;     // 水平居中</span><br><span class="line"><span class="attribute">align-items</span>:center;         // 竖直居中</span><br></pre></td></tr></table></figure>

<ul>
<li>当元素排列为纵向时, 主轴是纵向, 此时这两个属性, 对应的作用如下:</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>:center;     // 竖直居中</span><br><span class="line"><span class="attribute">align-items</span>:center;         // 水平居中</span><br></pre></td></tr></table></figure>

<h5 id="代码和结果"><a href="#代码和结果" class="headerlink" title="代码和结果"></a>代码和结果</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>:center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>:center;  </span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/27/%E5%89%8D%E7%AB%AF/CSS/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E5%B8%83%E5%B1%80/index/content-1.png"></p>
<h4 id="给内部元素设置的属性"><a href="#给内部元素设置的属性" class="headerlink" title="给内部元素设置的属性"></a>给内部元素设置的属性</h4><p>根据flex值的多少确定,该子元素在固定方向上排列所占的份数大小</p>
<p>所有元素的flex值的总和值作为分母,每个元素flex值作为分子,这个分数值决定比重</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flex:1;</span><br></pre></td></tr></table></figure>

<h5 id="代码和结果-1"><a href="#代码和结果-1" class="headerlink" title="代码和结果"></a>代码和结果</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .box&#123;</span><br><span class="line">      width: 500px;</span><br><span class="line">      height: 500px;</span><br><span class="line">      background-color: orange;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center</span><br><span class="line">    &#125;</span><br><span class="line">    .box div&#123;</span><br><span class="line">      width: 90px;</span><br><span class="line">      height: 90px;</span><br><span class="line">      background-color: purple;</span><br><span class="line">      border: 1px solid #ccc;</span><br><span class="line">    &#125;</span><br><span class="line">    .box .item1&#123;</span><br><span class="line">      flex:1;</span><br><span class="line">    &#125;</span><br><span class="line">    .box .item2&#123;</span><br><span class="line">      flex:2;</span><br><span class="line">    &#125;</span><br><span class="line">    .box .item3&#123;</span><br><span class="line">      flex:3;</span><br><span class="line">    &#125;</span><br><span class="line">    .box .item4&#123;</span><br><span class="line">      flex:4;</span><br><span class="line">    &#125;</span><br><span class="line">    .box .item5&#123;</span><br><span class="line">      flex:5;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;item1&quot;&gt;item1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item2&quot;&gt;item2&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item3&quot;&gt;item3&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item4&quot;&gt;item4&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item5&quot;&gt;item5&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/27/%E5%89%8D%E7%AB%AF/CSS/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E5%B8%83%E5%B1%80/index/content-2.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>纯CSS实现高度与宽度成比例的效果</title>
    <url>/2019/08/05/%E5%89%8D%E7%AB%AF/CSS/%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%BA%A6%E4%B8%8E%E5%AE%BD%E5%BA%A6%E6%88%90%E6%AF%94%E4%BE%8B%E7%9A%84%E6%95%88%E6%9E%9C/index/</url>
    <content><![CDATA[<h2 id="纯CSS实现高度与宽度成比例的效果"><a href="#纯CSS实现高度与宽度成比例的效果" class="headerlink" title="纯CSS实现高度与宽度成比例的效果"></a>纯CSS实现高度与宽度成比例的效果</h2><p>先上图</p>
<p><img src="/2019/08/05/%E5%89%8D%E7%AB%AF/CSS/%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%BA%A6%E4%B8%8E%E5%AE%BD%E5%BA%A6%E6%88%90%E6%AF%94%E4%BE%8B%E7%9A%84%E6%95%88%E6%9E%9C/index/content-1.jpg"></p>
<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>网页中B随着外部容器的宽度变化而缩放变化,而A是div盒子,随着B的缩放变化而<strong>自身宽高成固定比例变化</strong></p>
<h3 id="依据的CSS原理"><a href="#依据的CSS原理" class="headerlink" title="依据的CSS原理"></a>依据的CSS原理</h3><ul>
<li>一个元素的 padding，如果值是一个百分比，那这个百分比是相对于其父元素的宽度而言的，包括 padding-bottom 和 padding-top </li>
<li>在计算 Overflow 时，是将元素的内容区域（即 width &#x2F; height 对应的区域）和 Padding 区域一起计算的。也就是说，如果将元素的 overflow 设置为 hidden，“溢出”到 Padding 区域的内容也会照常显示。</li>
</ul>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>它的height ,,用 A 元素的 padding-bottom 代替 , 来实现它的宽度和高度成比例变化的效果</p>
<p>它的width ,需要单独指定百分百</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">B</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">A</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">padding-bottom</span>:<span class="number">25%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>**padding-bottom:决定这个元素的高度,**是相对于该元素的父级元素的宽度而决定的,</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>Git基础命令</title>
    <url>/2019/08/07/%E5%89%8D%E7%AB%AF/Git/Git%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/index/</url>
    <content><![CDATA[<h3 id="把代码存储到-git仓储中"><a href="#把代码存储到-git仓储中" class="headerlink" title="把代码存储到.git仓储中"></a>把代码存储到.git仓储中</h3><ul>
<li>1.把代码放到仓储的门口<ul>
<li><code>git add ./readme.md</code> 所指定的文件放到大门口</li>
<li><code>git add ./</code> 把所有的修改的文件添加到大门口</li>
</ul>
</li>
<li>2.把仓储门口的代码放到里面的房间中去<ul>
<li>&#96;git commit -m “这是对这次添加的东西的说明”</li>
</ul>
</li>
</ul>
<h2 id="可以一次性把我们修改的代码放到房间里-版本库"><a href="#可以一次性把我们修改的代码放到房间里-版本库" class="headerlink" title="可以一次性把我们修改的代码放到房间里(版本库)"></a>可以一次性把我们修改的代码放到房间里(版本库)</h2><ul>
<li><code>git commit --all -m &quot;一些说明&quot;</code><ul>
<li>–all 表示是把所有修改的文件提交到版本库</li>
</ul>
</li>
</ul>
<h2 id="查看当前的状态"><a href="#查看当前的状态" class="headerlink" title="查看当前的状态"></a>查看当前的状态</h2><ul>
<li>可以用来查看当前代码有没有被放到仓储中去</li>
<li>命令: <code>git status</code></li>
</ul>
<h2 id="git中的忽略文件"><a href="#git中的忽略文件" class="headerlink" title="git中的忽略文件"></a>git中的忽略文件</h2><ul>
<li>.gitignore,在这个文件中可以设置要被忽略的文件或者目录。</li>
<li>被忽略的文件不会被提交仓储里去.</li>
<li>在.gitignore中可以书写要被忽略的文件的路径，以&#x2F;开头，<br>一行写一个路径，这些路径所对应的文件都会被忽略，<br>不会被提交到仓储中<ul>
<li>写法<ul>
<li><code>/.idea </code> 会忽略.idea文件</li>
<li><code> /js</code>      会忽略js目录里的所有文件</li>
<li><code> /js/*.js</code> 会忽略js目录下所有js文件</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><ul>
<li><code>git log</code> 查看历史提交的日志</li>
<li><code>git log --oneline</code> 可以看到简洁版的日志</li>
</ul>
<h2 id="回退到指定的版本"><a href="#回退到指定的版本" class="headerlink" title="回退到指定的版本"></a>回退到指定的版本</h2><ul>
<li><code>git reset --hard Head~0</code><ul>
<li>表示回退到上一次代码提交时的状态</li>
</ul>
</li>
<li><code>git reset --hard Head~1</code><ul>
<li>表示回退到上上次代码提交时的状态</li>
</ul>
</li>
<li><code>git reset --hard [版本号]</code><ul>
<li>可以通过版本号精确的回退到某一次提交时的状态</li>
</ul>
</li>
<li><code>git reflog</code><ul>
<li>可以看到每一次切换版本的记录:可以看到所有提交的版本号</li>
</ul>
</li>
</ul>
<h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ul>
<li>默认是有一个主分支master</li>
</ul>
<h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><ul>
<li><code>git branch dev</code><ul>
<li>创建了一个dev分支</li>
<li>在刚创建时dev分支里的东西和master分支里的东西是一样的</li>
</ul>
</li>
</ul>
<h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><ul>
<li><code>git checkout dev</code><ul>
<li>切换到指定的分支,这里的切换到名为dev的分支<br><code>git branch</code> 可以查看当前有哪些分支</li>
</ul>
</li>
</ul>
<h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><ul>
<li><code>git merge dev</code><ul>
<li>合并分支内容,把当前分支与指定的分支(dev),进行合并</li>
<li>当前分支指的是<code>git branch</code>命令输出的前面有*号的分支</li>
</ul>
</li>
<li>合并时如果有冲突，需要手动去处理，处理后还需要再提交一次.</li>
</ul>
<h3 id="提交代码到github-当作git服务器来用"><a href="#提交代码到github-当作git服务器来用" class="headerlink" title="提交代码到github(当作git服务器来用)"></a>提交代码到github(当作git服务器来用)</h3><ul>
<li><p><code>git push [地址] master</code></p>
</li>
<li><p>示例: <code>git push https://github.com/huoqishi/test112.git master  master</code></p>
</li>
<li><p>会把当前分支的内容上传到远程的master分支上</p>
</li>
<li><p><code>git pull [地址] master</code></p>
</li>
<li><p>示例: <code>git pull https://github.com/huoqishi/test112.git master</code></p>
</li>
<li><p>会把远程分支的数据得到:(<em>注意本地-要初始一个仓储!</em>)</p>
</li>
<li><p><code>git clone [地址]</code></p>
</li>
<li><p>会得到远程仓储相同的数据,如果多次执行会覆盖本地内容。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
        <category>Git</category>
      </categories>
  </entry>
  <entry>
    <title>git回退版本并提交</title>
    <url>/2019/08/09/%E5%89%8D%E7%AB%AF/Git/git%E5%9B%9E%E9%80%80%E7%89%88%E6%9C%AC%E5%B9%B6%E6%8F%90%E4%BA%A4/index/</url>
    <content><![CDATA[<p>直接找到要回退的版本号（例如是：83qa2785），reset之后，强行推送到服务器端：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset --hard 83qa2785</span><br><span class="line">git push --force</span><br></pre></td></tr></table></figure>

<p>此时如果有人获取了更新的版本，可能拉去不下来，执行以下操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/branchname</span><br></pre></td></tr></table></figure>

<p>branchname 就是分支的名称，这时候就和服务器端一致了。</p>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>

<p>这条命令慎用,一旦成功运行这条命令意味着,当前版本的本地代码已经强制推到了云端,在没想清楚的情况下,会造成不可挽回的后果(一些版本或分支的代码丢失)</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Git</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo常用命令</title>
    <url>/2019/09/19/%E5%89%8D%E7%AB%AF/Hexo/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/index/</url>
    <content><![CDATA[<h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><p>首先使用命令行工具,进入hexo的最外层目录,你会看到如下文件.</p>
<p>然后,再在命令行中输入下面所说的命令才会起作用</p>
<p><img src="/2019/09/19/%E5%89%8D%E7%AB%AF/Hexo/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/index/p1.png"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>用于在Hexo博客中新建文章,把命令中的—–文章标题—-这四个字换成你要创建的文章标题即可.</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>

<ul>
<li>hexo clean    清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)</li>
<li>hexo generate    生成静态文件</li>
<li>hexo server     启动服务器</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo deploy &amp;&amp; hexo backup</span><br></pre></td></tr></table></figure>

<ul>
<li>hexo deploy  把本地的hexo博客部署到已经配置好的服务器站点上</li>
<li>hexo backup  把本地的hexo博客文件备份,上传到已经配置好的git站点上(前提是已经安装了Hexo 的<code>hexo-git-backup</code>插件)</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>JS中字符串常用方法</title>
    <url>/2019/08/14/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/index/</url>
    <content><![CDATA[<h3 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h3><p>从一个字符串的两端删除空白字符。在这个上下文中的空白字符是所有的空白字符 (space, tab, no-break space 等) 以及所有行终止符字符（如 LF，CR）</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> orig = <span class="string">&#x27;   foo  &#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(orig.<span class="title function_">trim</span>()); <span class="comment">// &#x27;foo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 另一个.trim()例子，只从一边删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> orig = <span class="string">&#x27;foo    &#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(orig.<span class="title function_">trim</span>()); <span class="comment">// &#x27;foo&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="substring"><a href="#substring" class="headerlink" title="substring()"></a>substring()</h3><p>用于提取字符串中两个介于指定下标之间的字符,并返回一个新的字符串</p>
<ul>
<li>第一个参数,是开始处的字符下标,包括本字符,第二个参数是可选参数,是结束处的字符下标,不包括本字符</li>
</ul>
<h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;HELLO WORLD&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">0</span>,<span class="number">4</span>));  <span class="comment">//  HELL</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果不填第二个参数,则从第一个下标开始,截取到这个字符串末尾为止</li>
</ul>
<h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;HELLO WORLD&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">6</span>)); <span class="comment">// WORLD</span></span><br></pre></td></tr></table></figure>

<h3 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf()"></a>lastIndexOf()</h3><p>返回一个指定字符串值最后出现的位置,在一个字符串中指定的位置从后向前查找</p>
<h4 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;hello$hello$hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;$&#x27;</span>)); <span class="comment">// 11</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;$&#x27;</span>,<span class="number">10</span>)); <span class="comment">// 5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">6</span>)); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS中把dom节点元素的类数组转化为数组</title>
    <url>/2019/09/08/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E6%8A%8Adom%E8%8A%82%E7%82%B9%E5%85%83%E7%B4%A0%E7%9A%84%E7%B1%BB%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E7%BB%84/index/</url>
    <content><![CDATA[<h3 id="为什么要把dom节点元素的类数组转化为数组"><a href="#为什么要把dom节点元素的类数组转化为数组" class="headerlink" title="为什么要把dom节点元素的类数组转化为数组?"></a>为什么要把dom节点元素的类数组转化为数组?</h3><p>获取的dom节点元素的<code>类数组</code>,它本身只是一个类数组,不完全具备数组的属性和方法,直接在它上面使用数组的方法会报错</p>
<h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>555<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> lis = box.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  lis.<span class="title function_">forEach</span>(<span class="function">(<span class="params">element,index</span>)=&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">console</span>.<span class="title function_">log</span>(element + <span class="string">&#x27;-----&#x27;</span> + index);</span></span><br><span class="line"><span class="language-javascript">   &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><p><img src="/2019/09/08/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E6%8A%8Adom%E8%8A%82%E7%82%B9%E5%85%83%E7%B4%A0%E7%9A%84%E7%B1%BB%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E7%BB%84/index/content-1.png"></p>
<h3 id="把dom节点元素的类数组转化为数组需要用到两个方法"><a href="#把dom节点元素的类数组转化为数组需要用到两个方法" class="headerlink" title="把dom节点元素的类数组转化为数组需要用到两个方法"></a>把dom节点元素的类数组转化为数组需要用到两个方法</h3><ul>
<li>slice()</li>
<li>call()</li>
</ul>
<h4 id="有以下几个步骤"><a href="#有以下几个步骤" class="headerlink" title="有以下几个步骤:"></a>有以下几个步骤:</h4><ol>
<li>获取dom元素列表</li>
<li>利用数组中原型(prototype)中的 slice() 方法</li>
<li>用 call() 方法改变 slice() 方法里面 this 的指向,让 this 指向dom元素列表</li>
<li>这一系列操作以后的返回值,既是转换完成之后的数组</li>
</ol>
<h5 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>555<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> lis = box.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> res = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(lis);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(lis);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span></span><br><span class="line"><span class="language-javascript">  res.<span class="title function_">forEach</span>(<span class="function">(<span class="params">element,index</span>)=&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">console</span>.<span class="title function_">log</span>(element );</span></span><br><span class="line"><span class="language-javascript">   &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h5><p><img src="/2019/09/08/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E6%8A%8Adom%E8%8A%82%E7%82%B9%E5%85%83%E7%B4%A0%E7%9A%84%E7%B1%BB%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E7%BB%84/index/content-2.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS中的call和apply方法</title>
    <url>/2019/08/14/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E7%9A%84call%E5%92%8Capply%E6%96%B9%E6%B3%95/index/</url>
    <content><![CDATA[<p><code>就本人目前的水平来说,对于这两个方法的理解停留在比较浅显的层面,</code></p>
<h3 id="call-和-apply-方法"><a href="#call-和-apply-方法" class="headerlink" title="call 和 apply 方法"></a>call 和 apply 方法</h3><p>这两个方法可以动态改变对应对象里面的 this 指向</p>
<p>也就是说当某个对象 (A) 没有某个方法,但是其他的对象 (B) 有,没有就可以借助<strong>call 和 apply 方法</strong> <em>(改变对象B里面this的指向,让B里面的 this指向A)</em> 来实现,让对象(A)直接使用对象(B)里面的方法</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">getElementsByTagName</span></span><br><span class="line"><span class="comment">// 这个函数选择的结果是一类符合规则的类数组,但并不是真正的数组,所以不能使用数组里面原型里面的如 pop , push 这种方法 </span></span><br><span class="line"><span class="comment">//  我们通过以下方法解决问题</span></span><br><span class="line"><span class="keyword">var</span> nodes = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> nodesArray = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(nodes);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nodes);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nodesArray);</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="/2019/08/14/%E5%89%8D%E7%AB%AF/JavaScript/JS%E4%B8%AD%E7%9A%84call%E5%92%8Capply%E6%96%B9%E6%B3%95/index/c-1.png"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS处理json常用方法</title>
    <url>/2019/08/09/%E5%89%8D%E7%AB%AF/JavaScript/JS%E5%A4%84%E7%90%86json%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/index/</url>
    <content><![CDATA[<h3 id="为什么用json"><a href="#为什么用json" class="headerlink" title="为什么用json"></a><strong>为什么用json</strong></h3><ol>
<li>JSON是纯文字格式，是独立于语言和平台的。</li>
<li>生成和解析相对于XML而言要简单。</li>
<li>读写的速度更快。</li>
</ol>
<h3 id="JS-内建两个Json方法"><a href="#JS-内建两个Json方法" class="headerlink" title="JS 内建两个Json方法"></a><strong>JS 内建两个Json方法</strong></h3><h4 id="JSON-stringify"><a href="#JSON-stringify" class="headerlink" title="JSON.stringify()"></a>JSON.stringify()</h4><p>把数组或对象转化为字符串</p>
<p><code>JSON.stringify( &#123;&#125; , [ ] , &quot;&quot;)</code></p>
<ul>
<li>参数一：要序列化的对象（object）</li>
<li>参数二：如果该参数是一个数组，则只有包含在这个数组中的属性名才会被序列化到最终的 JSON 字符串中；如果该参数为null或者未提供，则对象所有的属性都会被序列化</li>
<li>参数三：指定缩进用的空白字符串，用于美化输出（pretty-print）；如果参数是个数字，它代表有多少的空格；上限为10。该值若小于1，则意味着没有空格；如果该参数为字符串(字符串的前十个字母)，该字符串将被作为空格；如果该参数没有提供（或者为null）将没有空格</li>
</ul>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;百度&quot;</span>, <span class="string">&quot;site&quot;</span>:<span class="string">&quot;http://www.baidu.com&quot;</span>&#125;</span><br><span class="line">str_pretty1 = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(str)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str_pretty1)\</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;&quot;name&quot;:&quot;百度&quot;,&quot;site&quot;:&quot;http://www.baidu.com&quot;&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">str_pretty2 = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(str, <span class="literal">null</span>, <span class="number">4</span>) <span class="comment">//使用四个空格缩进</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str_pretty2)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    &quot;name&quot;: &quot;百度&quot;,</span></span><br><span class="line"><span class="comment">    &quot;site&quot;: &quot;http://www.baidu.com&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h4 id="JSON-parse"><a href="#JSON-parse" class="headerlink" title="JSON.parse()"></a><strong>JSON.parse()</strong></h4><p>方法用来解析JSON字符串，构造由字符串描述的JavaScript值或对象</p>
<p><code>JSON.parse(text[, reviver])</code></p>
<ul>
<li>**text:**必需， 一个有效的 JSON 字符串。</li>
<li><strong>reviver:</strong> 可选，一个转换结果的函数， 将为对象的每个成员调用此函数。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> json1 = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;百度&quot;,&quot;site&quot;:&quot;http://www.baidu.com&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> res1 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(json1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123;name: &quot;百度&quot;, site: &quot;http://www.baidu.com&quot;&#125;</span></span><br><span class="line"><span class="comment">name: &quot;百度&quot;</span></span><br><span class="line"><span class="comment">site: &quot;http://www.baidu.com&quot;</span></span><br><span class="line"><span class="comment">__proto__: Object</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;p&quot;: 5&#125;&#x27;</span>, <span class="keyword">function</span> (<span class="params">k, v</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(k === <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span> v;     <span class="comment">// 如果到了最顶层，则直接返回属性值，</span></span><br><span class="line">    <span class="keyword">return</span> v * <span class="number">2</span>;              <span class="comment">// 否则将属性值变为原来的 2 倍。</span></span><br><span class="line">&#125;);                            <span class="comment">// &#123; p: 10 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;1&quot;: 1, &quot;2&quot;: 2,&quot;3&quot;: &#123;&quot;4&quot;: 4, &quot;5&quot;: &#123;&quot;6&quot;: 6&#125;&#125;&#125;&#x27;</span>, <span class="keyword">function</span> (<span class="params">k, v</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(k); <span class="comment">// 输出当前的属性名，从而得知遍历顺序是从内向外的，</span></span><br><span class="line">                    <span class="comment">// 最后一个属性名会是个空字符串。</span></span><br><span class="line">    <span class="keyword">return</span> v;       <span class="comment">// 返回原始属性值，相当于没有传递 reviver 参数。</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 6</span></span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line"><span class="comment">// 3 </span></span><br><span class="line"><span class="comment">// &quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="JSON-parse-不允许用逗号作为结尾"><a href="#JSON-parse-不允许用逗号作为结尾" class="headerlink" title="JSON.parse() 不允许用逗号作为结尾"></a><code>JSON.parse()</code> <strong>不允许用逗号作为结尾</strong></h5><h4 id="遍历json数据和json阵列"><a href="#遍历json数据和json阵列" class="headerlink" title="遍历json数据和json阵列"></a><strong>遍历json数据和json阵列</strong></h4><h5 id="遍历JSON数据-代码"><a href="#遍历JSON数据-代码" class="headerlink" title="遍历JSON数据,代码"></a>遍历JSON数据,代码</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> packJson = &#123; <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Liza&quot;</span> , <span class="string">&quot;password&quot;</span> : <span class="string">&quot;123&quot;</span> &#125; ;</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">var</span> k <span class="keyword">in</span> packJson )&#123; <span class="comment">//遍历packJson数据的每个key/value对,k为key </span></span><br><span class="line">	<span class="title function_">alert</span>(k + <span class="string">&quot; &quot;</span> + packJson[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">name Liza</span></span><br><span class="line"><span class="comment">password 123</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h5 id="遍历JSON阵列-代码"><a href="#遍历JSON阵列-代码" class="headerlink" title="遍历JSON阵列,代码"></a>遍历JSON阵列,代码</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> packJson = [&#123; <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Liza&quot;</span> , <span class="string">&quot;password&quot;</span> : <span class="string">&quot;123&quot;</span> &#125;, &#123; <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Mike&quot;</span> , <span class="string">&quot;password&quot;</span> : <span class="string">&quot;456&quot;</span> &#125;];</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">var</span> i <span class="keyword">in</span> packJson)&#123;  <span class="comment">//遍历packJson阵列时，i为索引 </span></span><br><span class="line">	<span class="title function_">alert</span>(packJson[i].<span class="property">name</span> + <span class="string">&quot; &quot;</span> + packJson[i].<span class="property">password</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Liza 123</span></span><br><span class="line"><span class="comment">Mike 456</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS对象常用方法</title>
    <url>/2022/05/07/%E5%89%8D%E7%AB%AF/JavaScript/JS%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/index/</url>
    <content><![CDATA[<h3 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys()"></a>Object.keys()</h3><p>返回一个索引元素为字符串的数组,其元素来自于给定<code>Object</code>中可枚举的属性,遍历顺序与手动遍历顺序一致</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="number">0</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;c&#x27;</span> &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(obj));   <span class="comment">// [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果索引为数字的话,按照从小到大的顺序返回数字索引</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> anObj = &#123; <span class="number">100</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;c&#x27;</span> &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(anObj));  <span class="comment">// [&quot;2&quot;, &quot;7&quot;, &quot;100&quot;]</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>JS数组常用方法</title>
    <url>/2019/08/14/%E5%89%8D%E7%AB%AF/JavaScript/JS%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/index/</url>
    <content><![CDATA[<h4 id="通过索引访问元素"><a href="#通过索引访问元素" class="headerlink" title="通过索引访问元素"></a>通过索引访问元素</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>])  <span class="comment">// apple</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[arr.<span class="property">length</span> - <span class="number">1</span>]) <span class="comment">// banner</span></span><br></pre></td></tr></table></figure>

<h4 id="forEach-遍历数组"><a href="#forEach-遍历数组" class="headerlink" title="forEach 遍历数组"></a>forEach 遍历数组</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item, <span class="string">&#x27;------item&#x27;</span>)  <span class="comment">//&#x27;apple&#x27; &#x27;banana&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index, <span class="string">&#x27;------index&#x27;</span>) <span class="comment">// 0,1</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(array, <span class="string">&#x27;-----array&#x27;</span>) <span class="comment">//[&#x27;apple&#x27;,&#x27;banana&#x27;]</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="some-遍历数组"><a href="#some-遍历数组" class="headerlink" title="some 遍历数组"></a>some 遍历数组</h4><h5 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h5><p>遍历数组中每个元素，判断其是否满足指定函数的指定条件,返回true或者false</p>
<ul>
<li>如果一个元素满足条件,返回true,且后面的元素不再被检测</li>
<li>所有元素都不满足条件，则返回false</li>
<li>不会改变原始数组</li>
<li>不会对空数组进行检测;数组为空的话，直接返回false</li>
</ul>
<h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>检测数组中是否有值满足函数指定的条件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">4</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">20</span>];</span><br><span class="line">arr.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">item &gt; <span class="number">18</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<h4 id="indexOf-查找元素位置"><a href="#indexOf-查找元素位置" class="headerlink" title="indexOf  查找元素位置"></a>indexOf  查找元素位置</h4><h5 id="查找某个元素在数组中的位置-存在就是当前下标，如果不存在就为-1"><a href="#查找某个元素在数组中的位置-存在就是当前下标，如果不存在就为-1" class="headerlink" title="查找某个元素在数组中的位置,存在就是当前下标，如果不存在就为-1"></a>查找某个元素在数组中的位置,存在就是当前下标，如果不存在就为-1</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [ <span class="string">&#x27;eggs&#x27;</span>,<span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> index = arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;banana&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(index, <span class="string">&#x27;------查看某个某个元素在数组中的位置；&#x27;</span>) <span class="comment">//1</span></span><br><span class="line"><span class="comment">//--------------------</span></span><br><span class="line"><span class="keyword">let</span> index1 = arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;watermelon&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(index1, <span class="string">&#x27;------查看某个某个元素在数组中的位置；&#x27;</span>) <span class="comment">//-1  (这个元素不存在)</span></span><br></pre></td></tr></table></figure>

<h4 id="splice-对数组-替换-增-删-改"><a href="#splice-对数组-替换-增-删-改" class="headerlink" title="splice  对数组 替换, 增, 删, 改"></a>splice  对数组 替换, 增, 删, 改</h4><h5 id="splice-start-end-string-start是开始下标的位置-end是删除几个元素-string是插入或替换的元素"><a href="#splice-start-end-string-start是开始下标的位置-end是删除几个元素-string是插入或替换的元素" class="headerlink" title="splice(start,end,string) start是开始下标的位置  end是删除几个元素 string是插入或替换的元素"></a>splice(start,end,string) start是开始下标的位置  end是删除几个元素 string是插入或替换的元素</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [ <span class="string">&#x27;eggs&#x27;</span>,<span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line"><span class="comment">// ---  在0的位置删除一个元素，并且加入一个元素 ，删除插入</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;grapes&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr,<span class="string">&#x27;------&#x27;</span>) <span class="comment">//[ &#x27;grapes&#x27;, &#x27;banana&#x27; ] &#x27;------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ---- 把下表为1位置的元素替换为 fruits</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;fruits&#x27;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr,<span class="string">&#x27;------&#x27;</span>) <span class="comment">//[ &#x27;grapes&#x27;, &#x27;fruits&#x27; ] &#x27;------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ---- 在下标为2的位置插入2个元素</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="string">&#x27;fruits&#x27;</span>, <span class="string">&#x27;fruits&#x27;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr,<span class="string">&#x27;------&#x27;</span>) <span class="comment">//[ &#x27;grapes&#x27;, &#x27;fruits&#x27;, &#x27;fruits&#x27;, &#x27;fruits&#x27;] &#x27;------&#x27;</span></span><br><span class="line"><span class="comment">// ---- 删除下标为 0 的元素</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr,<span class="string">&#x27;------&#x27;</span>) <span class="comment">//[&#x27;fruits&#x27;, &#x27;fruits&#x27;, &#x27;fruits&#x27;] &#x27;------&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="slice-拷贝数组-不会改变原数组"><a href="#slice-拷贝数组-不会改变原数组" class="headerlink" title="slice 拷贝数组,不会改变原数组"></a>slice 拷贝数组,不会改变原数组</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[ <span class="string">&#x27;fruits&#x27;</span>, <span class="string">&#x27;fruits&#x27;</span>, <span class="string">&#x27;fruits&#x27;</span> ];</span><br><span class="line"><span class="keyword">let</span> copyArr = arr.<span class="title function_">slice</span>();  <span class="comment">//拷贝数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyArr) <span class="comment">//[ &#x27;fruits&#x27;, &#x27;fruits&#x27;, &#x27;fruits&#x27; ]</span></span><br><span class="line"><span class="keyword">let</span> sliceArr = arr.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">1</span>);  <span class="comment">//获取元素 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sliceArr)  <span class="comment">//[ &#x27;fruits&#x27; ]</span></span><br></pre></td></tr></table></figure>

<h4 id="isArray-用于确定传递的值是否是一个-Array"><a href="#isArray-用于确定传递的值是否是一个-Array" class="headerlink" title="isArray() 用于确定传递的值是否是一个 Array"></a>isArray() 用于确定传递的值是否是一个 Array</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(<span class="string">&#x27;str&#x27;</span>)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(&#123; <span class="string">&#x27;foo&#x27;</span>: <span class="string">&#x27;1&#x27;</span> &#125;)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(<span class="literal">null</span>)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(<span class="literal">undefined</span>)) <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<h4 id="concat-方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组"><a href="#concat-方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组" class="headerlink" title="concat()方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组"></a>concat()方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> array2 = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> array3 = [].<span class="title function_">concat</span>(array1, array2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array3) <span class="comment">//[ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;1&#x27;, &#x27;2&#x27; ]</span></span><br></pre></td></tr></table></figure>

<h4 id="filter-方法创建一个新数组-其包含通过所提供函数实现的测试的所有元素"><a href="#filter-方法创建一个新数组-其包含通过所提供函数实现的测试的所有元素" class="headerlink" title="filter() 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素"></a>filter() 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">filter</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt; <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">15</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">16</span>, <span class="number">3</span>].<span class="title function_">filter</span>(filter))  <span class="comment">// 15, 13, 16 ]</span></span><br></pre></td></tr></table></figure>

<h4 id="find-方法返回数组中满足提供的测试函数的第一个元素的值。否则返回-undefined"><a href="#find-方法返回数组中满足提供的测试函数的第一个元素的值。否则返回-undefined" class="headerlink" title="find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined"></a>find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">15</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">16</span>, <span class="number">3</span>].<span class="title function_">find</span>(filter))  <span class="comment">// 15 返回第一个满足条件的值  否则undefined</span></span><br></pre></td></tr></table></figure>

<h4 id="findIndex-方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1"><a href="#findIndex-方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1" class="headerlink" title="findIndex()方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1"></a>findIndex()方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">15</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">16</span>, <span class="number">3</span>].<span class="title function_">findIndex</span>(filter))  <span class="comment">// 0 返回第一个满足条件的下表  否则-1</span></span><br></pre></td></tr></table></figure>

<h4 id="includes-方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回"><a href="#includes-方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回" class="headerlink" title="includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回"></a>includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fillArr.<span class="title function_">includes</span>(<span class="number">2</span>)) <span class="comment">//true 检查数组中是否有该值有为true，否则false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fillArr.<span class="title function_">includes</span>(<span class="number">4</span>)) <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<h4 id="join-方法将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串"><a href="#join-方法将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串" class="headerlink" title="join() 方法将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串"></a>join() 方法将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> joinArr = [<span class="string">&#x27;Wind&#x27;</span>, <span class="string">&#x27;Rain&#x27;</span>, <span class="string">&#x27;Fire&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(joinArr.<span class="title function_">join</span>());  <span class="comment">//Wind,Rain,Fire</span></span><br></pre></td></tr></table></figure>

<h4 id="map-方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果"><a href="#map-方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果" class="headerlink" title="map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果"></a>map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> numbers=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">45</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">let</span> doubles=numbers.<span class="title function_">map</span>(<span class="function"><span class="params">x</span>=&gt;</span>x+<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doubles,<span class="string">&#x27;------map&#x27;</span>) <span class="comment">//[ 2, 3, 4, 46, 8, 9, 10 ] &#x27;------map&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="reduce-方法"><a href="#reduce-方法" class="headerlink" title="reduce() 方法"></a>reduce() 方法</h4><h5 id="对累加器和数组中的每个元素（从左到右）应用一个函数，将其减少为单个值"><a href="#对累加器和数组中的每个元素（从左到右）应用一个函数，将其减少为单个值" class="headerlink" title="对累加器和数组中的每个元素（从左到右）应用一个函数，将其减少为单个值"></a>对累加器和数组中的每个元素（从左到右）应用一个函数，将其减少为单个值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> reduceArr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">reduce</span>=(<span class="params">accumulator,currentValue</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(accumulator,<span class="string">&#x27;-------accumulator&#x27;</span>); <span class="comment">//累加的值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(currentValue,<span class="string">&#x27;-------currentValue&#x27;</span>); <span class="comment">//当前元素</span></span><br><span class="line">    <span class="keyword">return</span> accumulator+currentValue</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reduceArr.<span class="title function_">reduce</span>(reduce))  <span class="comment">//21 从左往右</span></span><br></pre></td></tr></table></figure>

<h4 id="reverse-方法将数组中元素的位置颠倒"><a href="#reverse-方法将数组中元素的位置颠倒" class="headerlink" title="reverse() 方法将数组中元素的位置颠倒"></a>reverse() 方法将数组中元素的位置颠倒</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reduceArr.<span class="title function_">reverse</span>()) <span class="comment">//[ 6, 5, 4, 3, 2, 1 ] 数组顺序颠倒</span></span><br></pre></td></tr></table></figure>

<h4 id="sort-数组的元素进行排序，并返回数组"><a href="#sort-数组的元素进行排序，并返回数组" class="headerlink" title="sort() 数组的元素进行排序，并返回数组"></a>sort() 数组的元素进行排序，并返回数组</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> items = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Edward&#x27;</span>, <span class="attr">value</span>: <span class="number">21</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Sharpe&#x27;</span>, <span class="attr">value</span>: <span class="number">37</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;And&#x27;</span>, <span class="attr">value</span>: <span class="number">45</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;The&#x27;</span>, <span class="attr">value</span>: -<span class="number">12</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Magnetic&#x27;</span> ,value :<span class="number">0</span>&#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Zeros&#x27;</span>, <span class="attr">value</span>: <span class="number">37</span> &#125;</span><br><span class="line">];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	按照items数组中的每一项的value值, 从小到大排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">items.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">value</span>-b.<span class="property">value</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(items)</span><br><span class="line"><span class="comment">/* 运行结果</span></span><br><span class="line"><span class="comment">  [&#123;name: &quot;The&quot;, value: -12&#125;,</span></span><br><span class="line"><span class="comment">  &#123;name: &quot;Magnetic&quot;, value: 0&#125;,</span></span><br><span class="line"><span class="comment">  &#123;name: &quot;Edward&quot;, value: 21&#125;,</span></span><br><span class="line"><span class="comment">  &#123;name: &quot;Sharpe&quot;, value: 37&#125;,</span></span><br><span class="line"><span class="comment">  &#123;name: &quot;Zeros&quot;, value: 37&#125;,</span></span><br><span class="line"><span class="comment">  &#123;name: &quot;And&quot;, value: 45&#125;]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	按照items里面每一项,name值的 A-Z 进行排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">items.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nameA = a.<span class="property">name</span>.<span class="title function_">toUpperCase</span>(); </span><br><span class="line">    <span class="keyword">var</span> nameB = b.<span class="property">name</span>.<span class="title function_">toUpperCase</span>(); </span><br><span class="line">    <span class="keyword">if</span> (nameA &lt; nameB) &#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (nameA &gt; nameB) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(items)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	运行结果</span></span><br><span class="line"><span class="comment">   [&#123;name: &quot;And&quot;, value: 45&#125;</span></span><br><span class="line"><span class="comment">    &#123;name: &quot;Edward&quot;, value: 21&#125;</span></span><br><span class="line"><span class="comment">    &#123;name: &quot;Magnetic&quot;, value: 0&#125;</span></span><br><span class="line"><span class="comment">    &#123;name: &quot;Sharpe&quot;, value: 37&#125;</span></span><br><span class="line"><span class="comment">    &#123;name: &quot;The&quot;, value: -12&#125;</span></span><br><span class="line"><span class="comment">    &#123;name: &quot;Zeros&quot;, value: 37&#125;]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>Vue项目真机调试</title>
    <url>/2019/08/05/%E5%89%8D%E7%AB%AF/Vue/Vue%E9%A1%B9%E7%9B%AE%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/index/</url>
    <content><![CDATA[<h2 id="Vue项目真机调试"><a href="#Vue项目真机调试" class="headerlink" title="Vue项目真机调试"></a>Vue项目真机调试</h2><p>在真机调试的过程中,发现输入本机ipv4地址,无法访问项目,</p>
<p>解决方法:   在 package.json文件中的 “scripts”–&gt;”dev” 的对应数据值中加入 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- host 0.0.0.0</span><br></pre></td></tr></table></figure>

<p>一般情况下,重启Vue项目就可以正常访问,但是,由于我的电脑特殊,经过上述改动以后,在电脑地址栏里面输入本机ipv4地址,可以访问项目,但是,手机上无论如何也不行,经过分析,觉得可能是无线路由器的ip隔离,或者是本机防火墙造成的.</p>
<p>经查看,本机ip与手机ip,在同一网段,所以排除了上述第一种可能,然后,关闭电脑windows defender防火墙,重新启动项目,问题解决,手机上访问没问题了.</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
  </entry>
</search>
